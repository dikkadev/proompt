{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "A comprehensive API for managing prompts, snippets, notes, and templates for AI interactions.\n\n## Features\n- **Prompts**: Create, manage, and organize prompts for various AI models\n- **Snippets**: Store and manage reusable code snippets and text blocks\n- **Notes**: Add contextual notes to prompts for better organization\n- **Templates**: Preview and analyze template content\n- **Tagging**: Organize content with flexible tagging system\n- **Linking**: Create relationships between prompts",
        "title": "Proompt API",
        "contact": {
            "name": "Proompt API Support",
            "url": "https://github.com/dikkadev/proompt",
            "email": "support@proompt.dev"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/health": {
            "get": {
                "description": "Returns the health status of the API server",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "Health status",
                        "schema": {
                            "$ref": "#/definitions/models.HealthResponse"
                        }
                    }
                }
            }
        },
        "/notes/{id}": {
            "get": {
                "description": "Retrieve a specific note by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Get a note by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Note ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note details",
                        "schema": {
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid note ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Note not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing note with new data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Update a note",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Note ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Note update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated note",
                        "schema": {
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Note not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a note by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Delete a note",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Note ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Note successfully deleted"
                    },
                    "400": {
                        "description": "Invalid note ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Note not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/prompts": {
            "get": {
                "description": "Get a paginated list of prompts with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompts"
                ],
                "summary": "List prompts",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Items per page (default: 20, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term for title/content",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "system",
                            "user",
                            "image",
                            "video"
                        ],
                        "type": "string",
                        "description": "Filter by prompt type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by use case",
                        "name": "use_case",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by tags (comma-separated)",
                        "name": "tags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of prompts",
                        "schema": {
                            "$ref": "#/definitions/models.PromptListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new prompt with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompts"
                ],
                "summary": "Create a new prompt",
                "parameters": [
                    {
                        "description": "Prompt creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePromptRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created prompt",
                        "schema": {
                            "$ref": "#/definitions/models.PromptResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/prompts/tags": {
            "get": {
                "description": "Get a list of all available prompt tags in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompt-tags"
                ],
                "summary": "List all prompt tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term for tag names",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all prompt tags",
                        "schema": {
                            "$ref": "#/definitions/models.TagListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/prompts/{id}": {
            "get": {
                "description": "Retrieve a specific prompt by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompts"
                ],
                "summary": "Get a prompt by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Prompt details",
                        "schema": {
                            "$ref": "#/definitions/models.PromptResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid prompt ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Prompt not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing prompt with new data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompts"
                ],
                "summary": "Update a prompt",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Prompt update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdatePromptRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated prompt",
                        "schema": {
                            "$ref": "#/definitions/models.PromptResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Prompt not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a prompt by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompts"
                ],
                "summary": "Delete a prompt",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Prompt successfully deleted"
                    },
                    "400": {
                        "description": "Invalid prompt ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Prompt not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/prompts/{id}/backlinks": {
            "get": {
                "description": "Get all prompts that link to this prompt (backlinks)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompt-links"
                ],
                "summary": "Get incoming links to a prompt",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of incoming links",
                        "schema": {
                            "$ref": "#/definitions/models.PromptLinkListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid prompt ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Prompt not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/prompts/{id}/links": {
            "get": {
                "description": "Get all prompts that this prompt links to",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompt-links"
                ],
                "summary": "Get outgoing links from a prompt",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of outgoing links",
                        "schema": {
                            "$ref": "#/definitions/models.PromptLinkListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid prompt ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Prompt not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a relationship link from one prompt to another",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompt-links"
                ],
                "summary": "Create a link between prompts",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Source Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Link creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreatePromptLinkRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created link",
                        "schema": {
                            "$ref": "#/definitions/models.PromptLinkResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Prompt not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Link already exists",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/prompts/{id}/links/{toId}": {
            "delete": {
                "description": "Remove a relationship link between two prompts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompt-links"
                ],
                "summary": "Delete a link between prompts",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Source Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Target Prompt ID",
                        "name": "toId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Link successfully deleted"
                    },
                    "400": {
                        "description": "Invalid prompt IDs",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Link or prompt not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/prompts/{id}/notes": {
            "get": {
                "description": "Get all notes associated with a specific prompt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "List notes for a prompt",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Items per page (default: 20, max: 100)",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of notes for the prompt",
                        "schema": {
                            "$ref": "#/definitions/models.NoteListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Prompt not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new note associated with a specific prompt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notes"
                ],
                "summary": "Create a note for a prompt",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Note creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created note",
                        "schema": {
                            "$ref": "#/definitions/models.NoteResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Prompt not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/prompts/{id}/tags": {
            "get": {
                "description": "Get all tags associated with a specific prompt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompt-tags"
                ],
                "summary": "Get tags for a prompt",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of prompt tags",
                        "schema": {
                            "$ref": "#/definitions/models.TagListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid prompt ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Prompt not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new tag to an existing prompt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompt-tags"
                ],
                "summary": "Add a tag to a prompt",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTagRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully added tag",
                        "schema": {
                            "$ref": "#/definitions/models.TagResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Prompt not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Tag already exists",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/prompts/{id}/tags/{tagName}": {
            "delete": {
                "description": "Remove an existing tag from a prompt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "prompt-tags"
                ],
                "summary": "Remove a tag from a prompt",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Prompt ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tag name to remove",
                        "name": "tagName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Tag successfully removed"
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Prompt or tag not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/snippets": {
            "get": {
                "description": "Get a paginated list of snippets with optional filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snippets"
                ],
                "summary": "List snippets",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "minimum": 1,
                        "type": "integer",
                        "description": "Items per page (default: 20, max: 100)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term for title/content",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by tags (comma-separated)",
                        "name": "tags",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of snippets",
                        "schema": {
                            "$ref": "#/definitions/models.SnippetListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new code snippet or text block",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snippets"
                ],
                "summary": "Create a new snippet",
                "parameters": [
                    {
                        "description": "Snippet creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateSnippetRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created snippet",
                        "schema": {
                            "$ref": "#/definitions/models.SnippetResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/snippets/tags": {
            "get": {
                "description": "Get a list of all available snippet tags in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snippet-tags"
                ],
                "summary": "List all snippet tags",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term for tag names",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all snippet tags",
                        "schema": {
                            "$ref": "#/definitions/models.TagListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/snippets/{id}": {
            "get": {
                "description": "Retrieve a specific snippet by its unique identifier",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snippets"
                ],
                "summary": "Get a snippet by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Snippet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Snippet details",
                        "schema": {
                            "$ref": "#/definitions/models.SnippetResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid snippet ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Snippet not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing snippet with new data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snippets"
                ],
                "summary": "Update a snippet",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Snippet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Snippet update data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateSnippetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated snippet",
                        "schema": {
                            "$ref": "#/definitions/models.SnippetResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Snippet not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a snippet by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snippets"
                ],
                "summary": "Delete a snippet",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Snippet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Snippet successfully deleted"
                    },
                    "400": {
                        "description": "Invalid snippet ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Snippet not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/snippets/{id}/tags": {
            "get": {
                "description": "Get all tags associated with a specific snippet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snippet-tags"
                ],
                "summary": "Get tags for a snippet",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Snippet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of snippet tags",
                        "schema": {
                            "$ref": "#/definitions/models.TagListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid snippet ID",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Snippet not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new tag to an existing snippet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snippet-tags"
                ],
                "summary": "Add a tag to a snippet",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Snippet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AddTagRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully added tag",
                        "schema": {
                            "$ref": "#/definitions/models.TagResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Snippet not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Tag already exists",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/snippets/{id}/tags/{tagName}": {
            "delete": {
                "description": "Remove an existing tag from a snippet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "snippet-tags"
                ],
                "summary": "Remove a tag from a snippet",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Snippet ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tag name to remove",
                        "name": "tagName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Tag successfully removed"
                    },
                    "400": {
                        "description": "Invalid parameters",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Snippet or tag not found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/template/analyze": {
            "post": {
                "description": "Analyze a template to extract variables, functions, and structure information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "Analyze template structure",
                "parameters": [
                    {
                        "description": "Template analysis data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TemplatePreviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Template analysis result",
                        "schema": {
                            "$ref": "#/definitions/models.TemplatePreviewResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data or template syntax",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/template/preview": {
            "post": {
                "description": "Preview how a template will render with provided data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "templates"
                ],
                "summary": "Preview template rendering",
                "parameters": [
                    {
                        "description": "Template preview data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TemplatePreviewRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Template preview result",
                        "schema": {
                            "$ref": "#/definitions/models.TemplatePreviewResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data or template syntax",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AddTagRequest": {
            "type": "object",
            "required": [
                "tag_name"
            ],
            "properties": {
                "tag_name": {
                    "type": "string"
                }
            }
        },
        "models.CreateNoteRequest": {
            "type": "object",
            "required": [
                "body",
                "title"
            ],
            "properties": {
                "body": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "models.CreatePromptLinkRequest": {
            "type": "object",
            "required": [
                "to_prompt_id"
            ],
            "properties": {
                "link_type": {
                    "type": "string"
                },
                "to_prompt_id": {
                    "type": "string"
                }
            }
        },
        "models.CreatePromptRequest": {
            "type": "object",
            "required": [
                "content",
                "title",
                "type",
                "use_case"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "model_compatibility_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "notes": {
                    "type": "string"
                },
                "other_parameters": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "temperature_suggestion": {
                    "type": "number",
                    "maximum": 2,
                    "minimum": 0
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "system",
                        "user",
                        "image",
                        "video"
                    ]
                },
                "use_case": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "models.CreateSnippetRequest": {
            "type": "object",
            "required": [
                "content",
                "title"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "details": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "error": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.HealthResponse": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "models.NoteListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NoteResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "models.NoteResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "prompt_id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.PromptLinkListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PromptLinkResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "models.PromptLinkResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "from_prompt_id": {
                    "type": "string"
                },
                "link_type": {
                    "type": "string"
                },
                "to_prompt_id": {
                    "type": "string"
                }
            }
        },
        "models.PromptListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PromptResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "models.PromptResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "git_ref": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "model_compatibility_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "other_parameters": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "temperature_suggestion": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "use_case": {
                    "type": "string"
                }
            }
        },
        "models.SnippetListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SnippetResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "models.SnippetResponse": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "git_ref": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.TagListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TagResponse"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_pages": {
                    "type": "integer"
                }
            }
        },
        "models.TagResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.TemplatePreviewRequest": {
            "type": "object",
            "required": [
                "content"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "variables": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "models.TemplatePreviewResponse": {
            "type": "object",
            "properties": {
                "resolved_content": {
                    "type": "string"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TemplateVariable"
                    }
                },
                "warnings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.TemplateVariable": {
            "type": "object",
            "properties": {
                "default_value": {
                    "type": "string"
                },
                "has_default": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "description": "\"provided\", \"default\", \"missing\"",
                    "type": "string"
                }
            }
        },
        "models.UpdateNoteRequest": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string",
                    "minLength": 1
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        },
        "models.UpdatePromptRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "minLength": 1
                },
                "model_compatibility_tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "notes": {
                    "type": "string"
                },
                "other_parameters": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "temperature_suggestion": {
                    "type": "number",
                    "maximum": 2,
                    "minimum": 0
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "system",
                        "user",
                        "image",
                        "video"
                    ]
                },
                "use_case": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1
                }
            }
        },
        "models.UpdateSnippetRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "minLength": 1
                },
                "description": {
                    "type": "string"
                },
                "title": {
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "API key for authentication (if implemented)",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "tags": [
        {
            "description": "Health check endpoints",
            "name": "health"
        },
        {
            "description": "Operations on prompts",
            "name": "prompts"
        },
        {
            "description": "Manage relationships between prompts",
            "name": "prompt-links"
        },
        {
            "description": "Manage tags for prompts",
            "name": "prompt-tags"
        },
        {
            "description": "Operations on code snippets and text blocks",
            "name": "snippets"
        },
        {
            "description": "Manage tags for snippets",
            "name": "snippet-tags"
        },
        {
            "description": "Manage notes associated with prompts",
            "name": "notes"
        },
        {
            "description": "Template analysis and preview operations",
            "name": "templates"
        }
    ]
}